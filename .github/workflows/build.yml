# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build App

on:
  push:
    branches: [master]
    tags:
      - v*
    paths:
      - "**/app/*"
      - "!**/README.md"
      - "!**/.vscode"
      - "!**/api/*"

jobs:
  build:
    defaults:
      run:
        working-directory: app
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - name: Set up variables
        id: variables
        # adapted from https://github.com/caronc/apprise-api/blob/master/.github/workflows/build.yml
        run: |
          DOCKER_REPOSITORY=bkonicek/pcpricechecker
          VERSION=edge
          echo $GITHUB_REF
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo $VERSION
          fi

          TAGS="${DOCKER_REPOSITORY}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS, ${DOCKER_REPOSITORY}:latest"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=repo::${DOCKER_REPOSITORY}
        working-directory: ./..

      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with pylint
        run: |
          # report warnings but don't error
          pylint readsheet.py --exit-zero --disable=E,C0116,C0114
          # fail the build on any errors, unless disabled 
          pylint readsheet.py -E

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v1.0.2

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1.6.0
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v1.1.1
        with:
          tag_with_ref: true
          # tags: ${{ steps.variables.outputs.tags }}
          repository: ${{ steps.variables.outputs.repo }}
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          path: "app"
          push: true

      #     - name: Test with pytest
      #       run: |
      #         pytest

      - name: notify Slack
        uses: act10ns/slack@v1.0.9
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: "#builds"
        if: always()
